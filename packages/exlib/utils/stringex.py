import re

def get_words(s, delimiters=r'[\s,;]+'):
    return tuple( w.strip() for w in re.split(delimiters, s) if w.strip() )


def find_words(a_string, *matches, prefix="\\b", suffix="\\b", flags=re.I): 
    finds = []
    
    pattern = re.compile(prefix + f"({'|'.join(matches)})" + suffix, flags=re.I)    
    matches = re.findall(pattern, a_string)
    
    return matches

def find_lower_words(a_string, *matches, prefix="\\b", suffix="\\b", flags=re.I): 
    return [w.lower() for w in find_words(a_string, *matches, prefix=prefix, suffix=suffix, flags=flags)]

def find_upper_words(a_string, *matches, prefix="\\b", suffix="\\b", flags=re.I): 
    return [w.upper() for w in find_words(a_string, *matches, prefix=prefix, suffix=suffix, flags=flags)]

def find_words_in_strings(strings, *words):
    words = set(words)
    matches = set()
    for s in strings:
        matches.update(find_words(s, *words))
        if words == matches:
            break
    return matches


if __name__=="__main__":
    _python_tags = get_words("__pyx_ __doc__ __name__ __dict__ __globals__ __defaults__ __kwdefaults__ __module__ __reduce__ __int__")
    strings = ['./release/develop/packages/amq/general.c', 'release/develop/packages/amq/general.py', 'TID-{}/{}', '__doc__', '__str__', 'TEST', 'amsg', 'args', 'argv', 'host', 'info', '__init__', 'json', '__main__', '__name__', 'port', '__repr__', 'self', '__spec__', '__test__', 'time', 'user', 'uuid', '__class__', 'click', 'count', 'group', 'print', 'qname', 'queue', 'range', 'sleep', 't_now', 'uuid4', 'vhost', 'Client', 'client', 'config', 'direct', 'format', '__import__', 'kwargs', '__module__', 'name', 'setter', 'name', 'H_PRI_Q', 'L_PRI_Q', 'M_PRI_Q', 'ackmode', 'command', 'kickoff', 'message', 'modules', 'pathlib', 'payload', '__prepare__', 'publish', '_qname', 'release', 'request', 'warning', 'AmqQueue', 'MyLogger', 'consumer', 'database', 'exchange', 'function', 'interval', 'is_alive', 'is_ready', 'messages', 'on_empty', 'password', 'property', '__qualname__', 'routekey', 'unittest', 'AmqConfig', 'exception', 'in_queues', '__metaclass__', 'post_call', 'publisher', 'traceback', 'AmqGeneral', 'AmqMessage', 'OmDatabase', 'high_pri_q', 'on_message', '_routekey', 'short_help', 'start_time', 'PollingHook', 'amq.general', 'config_file', 'get_message', 'om_database', 'consume_task', 'create_queue', 'create_vhost', 'delete_queue', 'delete_vhost', 'from_payload', 'get_exchange', 'get_messages', 'last_timeout', 'middle_pri_q', 'pyrabbit.api', 'qid_high_pri', 'AmqGeneral.om', 'polling_hooks', 'update_status', 'AmqQueue.__str__', 'AmqQueue.qname', 'NotImplemented', 'create_binding', 'delete_binding', 'qid_middle_pri', 'AmqQueue.__init__', 'AmqQueue.__repr__', 'PollingHook.run', 'create_exchange', 'high-pri-qname2', 'update_terminal', 'consumed_message', 'exlib.log.logger', 'got an exception: ', 'high-pri-rt-key2', 'AmqGeneral.__init__', 'AmqQueue.routekey', 'KeyboardInterrupt', 'ack_requeue_false', 'middle-pri-qname1', 'quit on control-c', 'AmqGeneral.kickoff', 'AmqGeneral.publish', 'AmqGeneral.release', 'PollingHook.__init__', 'PollingTimeoutHook', 'cline_in_traceback', 'middle-pri-rt-key1', 'prioritized_queues', 'AmqGeneral.is_ready', 'AmqGeneral.on_empty', 'AmqGeneral.post_call', 'AmqGeneral.on_message', 'set_vhost_permissions', 'AmqGeneral.get_message', 'PollingTimeoutHook.run', 'create a consumer task', 'AmqGeneral.consume_task', 'AmqGeneral.create_queue', 'AmqGeneral.delete_queue', 'AmqGeneral.get_messages', 'create a publisher task', 'AmqGeneral.update_status', 'PollingTimeoutHook.__str__', 'failed to handle message: ', 'AmqGeneral.delete_binding', 'PollingTimeoutHook.__init__', 'PollingTimeoutHook.__repr__', 'rabbitmq server is down. waiting', '"this is a high priority message: ', '"this is a middle priority message: ', 'release/develop/packages/amq/general.py', '__init__', 'PyTuple_Check(__pyx_args)', 'amq.general.AmqQueue.__init__', 'qname', 'amq.general.AmqQueue.qname', 'routekey', 'amq.general.AmqQueue.routekey', '__str__', 'PyUnicode_IS_READY(__pyx_t_4)', 'PyUnicode_Check(__pyx_t_4)', 'PyTuple_Check(__pyx_t_1)', 'PyUnicode_IS_READY(__pyx_t_5)', 'PyUnicode_Check(__pyx_t_5)', 'amq.general.AmqQueue.__str__', '__repr__', 'amq.general.AmqQueue.__repr__', 'amq.general.PollingHook.__init__', 'amq.general.PollingHook.run', 'amq.general.PollingTimeoutHook.__init__', 'amq.general.PollingTimeoutHook.run', 'amq.general.PollingTimeoutHook.__str__', 'amq.general.PollingTimeoutHook.__repr__', 'amq.general.AmqGeneral.__init__', 'PyTuple_Check(__pyx_t_4)', 'PyUnicode_IS_READY(__pyx_t_3)', 'PyUnicode_Check(__pyx_t_3)', 'PyTuple_Check(__pyx_t_2)', 'PyTuple_Check(__pyx_t_10)', 'PyTuple_Check(__pyx_t_3)', 'PyTuple_Check(__pyx_t_9)', 'amq.general.AmqGeneral.om', 'update_status', 'amq.general.AmqGeneral.update_status', 'create_queue', 'amq.general.AmqGeneral.create_queue', 'PyTuple_Check(__pyx_t_6)', 'PyTuple_Check(__pyx_t_8)', 'publish', 'amq.general.AmqGeneral.publish', 'get_message', 'amq.general.AmqGeneral.get_message', 'get_messages', 'amq.general.AmqGeneral.get_messages', 'amq.general.AmqGeneral.on_message', 'on_empty', 'amq.general.AmqGeneral.on_empty', 'is_ready', 'post_call', 'amq.general.AmqGeneral.post_call', 'amq.general.__defaults__', 'consume_task', 'amq.general.AmqGeneral.consume_task', 'PyList_Check(__pyx_t_4)', 'PyTuple_Check(__pyx_t_16)', 'PyTuple_Check(__pyx_t_17)', 'delete_binding', 'amq.general.AmqGeneral.delete_binding', 'delete_queue', 'amq.general.AmqGeneral.delete_queue', 'PyTuple_Check(__pyx_t_7)', 'release', 'amq.general.AmqGeneral.release', 'kickoff', 'amq.general.AmqGeneral.kickoff', 'publisher', 'PyUnicode_Check(__pyx_t_11)', 'PyUnicode_IS_READY(__pyx_t_11)', 'PyTuple_Check(__pyx_t_12)', 'amq.general.publisher', 'consumer', 'PyList_Check(__pyx_t_3)', 'amq.general.consumer', 'general', 'Interpreter change detected - this module can only be loaded into one interpreter per process.', 'name', '__loader__', 'loader', '__file__', 'origin', '__package__', 'parent', '__path__', 'submodule_search_locations', "Module 'general' has already been imported. Re-initialisation is not supported.", 'builtins', 'cython_runtime', '__builtins__', 'amq.general', 'PyList_Check(__pyx_t_1)', 'PyList_Check(__pyx_t_2)', 'init amq.general', "name '%U' is not defined", 'at least', 'at most', 'exactly', '%.200s() takes %.8s %zd positional argument%.1s (%zd given)', "%s() got multiple values for keyword argument '%U'", 'PyUnicode_Check(**name)', 'PyUnicode_IS_READY(**name)', 'PyUnicode_Check(key)', 'PyUnicode_IS_READY(key)', 'PyUnicode_Check(**argname)', 'PyUnicode_IS_READY(**argname)', '%.200s() keywords must be strings', "%s() got an unexpected keyword argument '%U'", 'PyUnicode_Check(result_uval)', 'PyUnicode_IS_READY(result_uval)', '((PyUnicodeObject*)(result_uval))->data.any', 'PyTuple_Check(value_tuple)', 'PyUnicode_Check(uval)', 'PyUnicode_IS_READY(uval)', '((PyUnicodeObject*)(uval))->data.any', 'join() result is too long for a Python string', 'PyCFunction_Check(func)', 'METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS))', 'nargs >= 0', 'nargs == 0 || args != NULL', '!PyErr_Occurred()', 'globals != NULL', 'tstate != NULL', '__pyx_pyframe_localsplus_offset', 'kwargs == NULL || PyDict_Check(kwargs)', ' while calling a Python object', 'PyTuple_Check(argdefs)', 'PyTuple_Check(kwtuple)', 'NULL result without error in PyObject_Call', 'PyTuple_Check(args)', 'raise: arg 3 must be a traceback or None', 'instance exception may not have a separate value', 'calling %R should have returned an instance of BaseException, not %R', 'raise: exception class must be a subclass of BaseException', 'exception causes must derive from BaseException', 'PyList_Check(o)', 'PyTuple_Check(o)', 'PyTuple_Check(tuple)', "'%.200s' object is unsliceable", "'%.200s' object is not subscriptable", "cannot fit '%.200s' into an index-sized integer", '00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899', '00010203040506071011121314151617202122232425262730313233343536374041424344454647505152535455565760616263646566677071727374757677', '0123456789abcdef0123456789ABCDEF', "*dpos == '0'", 'cannot import name %S', '_cython_0_29_28', 'Shared Cython type %.200s is not a type object', 'Shared Cython type %.200s has the wrong size, try recompiling', '__name__ must be set to a string object', '__qualname__ must be set to a string object', "function's dictionary may not be deleted", "setting function's dictionary to a non-dict", 'PyTuple_Check(res)', '__defaults__ must be set to a tuple object', '__kwdefaults__ must be set to a dict object', '__annotations__ must be set to a dict object', 'func_doc', '__doc__', 'func_name', '__name__', '__qualname__', '__self__', 'func_dict', '__dict__', 'func_globals', '__globals__', 'func_closure', '__closure__', 'func_code', '__code__', 'func_defaults', '__defaults__', '__kwdefaults__', '__annotations__', '__module__', '__reduce__', '<cyfunction %U at %p>', 'PyTuple_Check(arg)', '%.200s() takes no arguments (%zd given)', '%.200s() takes exactly one argument (%zd given)', 'Bad call flags in __Pyx_CyFunction_Call. METH_OLDARGS is no longer supported!', '%.200s() takes no keyword arguments', 'cython_function_or_method', 'PyTuple_Check(bases)', 'metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases', 'PyUnicode_Check(s1)', 'PyUnicode_IS_READY(s1)', 'PyUnicode_Check(s2)', 'PyUnicode_IS_READY(s2)', '((PyUnicodeObject*)(s1))->data.any', '((PyUnicodeObject*)(s2))->data.any', '%s (%s:%d)', 'PyTuple_Check(mro)', 'PyExceptionClass_Check(exc_type)', '%d.%d', "compiletime version %s of module '%.100s' does not match runtime version %s", '__int__ returned non-int (type %.200s).  The ability to return an instance of a strict subclass of int is deprecated, and may be removed in a future version of Python.', '__%.4s__ returned non-%.4s (type %.200s)', '__pyx_pw_3amq_7general_8AmqQueue_7routekey', '__pyx_pf_3amq_7general_8AmqQueue_8__str__', '__Pyx_PyCFunction_FastCall', '__pyx_pw_3amq_7general_11PollingHook_1__init__', '__pyx_pw_3amq_7general_11PollingHook_3run', '__pyx_pw_3amq_7general_18PollingTimeoutHook_1__init__', '__Pyx_IsSubtype', '__pyx_pf_3amq_7general_18PollingTimeoutHook_4__str__', '__pyx_pw_3amq_7general_10AmqGeneral_1__init__', '__pyx_pf_3amq_7general_10AmqGeneral___init__', '__pyx_pw_3amq_7general_10AmqGeneral_7create_queue', '__pyx_pf_3amq_7general_10AmqGeneral_6create_queue', '__pyx_pw_3amq_7general_10AmqGeneral_9publish', '__pyx_pf_3amq_7general_10AmqGeneral_8publish', '__pyx_pw_3amq_7general_10AmqGeneral_11get_message', '__pyx_pf_3amq_7general_10AmqGeneral_10get_message', '__Pyx_GetItemInt_Fast', '__pyx_pw_3amq_7general_10AmqGeneral_13get_messages', '__pyx_pf_3amq_7general_10AmqGeneral_12get_messages', '__pyx_pw_3amq_7general_10AmqGeneral_15on_message', '__pyx_pw_3amq_7general_10AmqGeneral_17on_empty', '__pyx_pw_3amq_7general_10AmqGeneral_21post_call', '__pyx_pf_3amq_7general_6__defaults__', '__pyx_pw_3amq_7general_10AmqGeneral_23consume_task', '__pyx_pf_3amq_7general_10AmqGeneral_22consume_task', '__pyx_pw_3amq_7general_10AmqGeneral_25delete_binding', '__pyx_pf_3amq_7general_10AmqGeneral_24delete_binding', '__pyx_pw_3amq_7general_10AmqGeneral_27delete_queue', '__pyx_pf_3amq_7general_10AmqGeneral_26delete_queue', '__pyx_pf_3amq_7general_10AmqGeneral_30kickoff', '__pyx_pf_3amq_7general_2publisher', '__Pyx_PyUnicode_From_long', '__pyx_pf_3amq_7general_4consumer', '__pyx_pymod_exec_general', '__Pyx_PyUnicode_Equals', '__Pyx_ParseOptionalKeywords', '__Pyx_PyUnicode_Join', '__Pyx_PyFunction_FastCallNoKw', '__Pyx_PyFunction_FastCallDict', '__Pyx__PyObject_CallOneArg', '__Pyx_PyObject_Call2Args', '__Pyx_PyErr_ExceptionMatchesTuple', '__Pyx_PyUnicode_BuildFromAscii', '__Pyx_CyFunction_init_defaults', '__Pyx_CyFunction_CallMethod', '__Pyx_CyFunction_CallAsMethod', '__Pyx_CalculateMetaclass', '__Pyx_PyErr_GivenExceptionMatchesTuple']
    
    print(find_words_in_strings(strings, *_python_tags))  
